# Generated by Django 4.2.4 on 2023-09-13 01:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActividadReservada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Actividades Reservadas',
            },
        ),
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacion', models.CharField(max_length=255)),
                ('codigo', models.CharField(max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('metodologia', models.CharField(choices=[('P', 'Presencial'), ('V', 'Virtual'), ('H', 'Hibrido')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='AuditoriaEstadoVersionPrograma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('A', 'Abierto'), ('P', 'Pendiente'), ('AP', 'Aprobado')], max_length=2)),
                ('modificado_en', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Auditorias Estado Version Programas',
            },
        ),
        migrations.CreateModel(
            name='BloqueCurricular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('coeficiente', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'verbose_name_plural': 'Bloques Curriculares',
            },
        ),
        migrations.CreateModel(
            name='CargaBloque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horas', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Carga Bloques',
            },
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('valor', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Configuraciones',
            },
        ),
        migrations.CreateModel(
            name='Correlativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('R', 'Regular'), ('A', 'Aprobado')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Descriptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('E', 'Eje Transversal'), ('D', 'Descriptor')], max_length=1)),
            ],
            options={
                'verbose_name_plural': 'Descriptores',
            },
        ),
        migrations.CreateModel(
            name='Estandar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('fecha_inicio', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Est√°ndares',
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=2)),
                ('creada', models.DateTimeField(default=django.utils.timezone.now)),
                ('leida', models.DateTimeField(blank=None, null=None)),
                ('mensaje', models.CharField(blank=True, max_length=255, null=True)),
                ('redirecciona', models.URLField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Notificaciones',
            },
        ),
        migrations.CreateModel(
            name='PlanDeEstudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('version', models.TextField()),
                ('nombre', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Planes de Estudio',
            },
        ),
        migrations.CreateModel(
            name='ProgramaTieneActividadReservada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.IntegerField(choices=[(0, 'Nada'), (1, 'Bajo / Si'), (2, 'Medio'), (3, 'Alto')])),
            ],
            options={
                'verbose_name_plural': 'Actividades Reservadas para Programas',
            },
        ),
        migrations.CreateModel(
            name='ProgramaTieneDescriptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.IntegerField(choices=[(0, 'Nada'), (1, 'Bajo / Si'), (2, 'Medio'), (3, 'Alto')])),
            ],
            options={
                'verbose_name_plural': 'Descriptores para Programas',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(choices=[('DC', 'Director de Carrera'), ('TC', 'Titular de Catedra'), ('SA', 'Secretario Academico'), ('D', 'Docente')], max_length=2)),
            ],
            options={
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='VersionProgramaAsignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('A', 'Abierto'), ('P', 'Pendiente'), ('AP', 'Aprobado')], default='A', max_length=2)),
                ('semanas_dictado', models.PositiveIntegerField()),
                ('semanal_teoria_presencial', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_practica_presencial', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_teorico_practico_presencial', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_lab_presencial', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_teoria_remoto', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_practica_remoto', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_teorico_practico_remoto', models.PositiveIntegerField(blank=True, null=True)),
                ('semanal_lab_remoto', models.PositiveIntegerField(blank=True, null=True)),
                ('contenidos', models.TextField()),
                ('bibliografia', models.TextField()),
                ('metodologia', models.TextField()),
                ('recursos', models.TextField()),
                ('evaluacion', models.TextField()),
                ('investigacion_docentes', models.TextField()),
                ('investigacion_estudiantes', models.TextField()),
                ('extension_docentes', models.TextField()),
                ('extension_estudiantes', models.TextField()),
                ('cronograma', models.TextField()),
                ('resultados_de_aprendizaje', models.JSONField()),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.asignatura')),
                ('semestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.semestre')),
            ],
            options={
                'verbose_name_plural': 'Versiones de Programa de Asignatura',
            },
        ),
        migrations.AddConstraint(
            model_name='semestre',
            constraint=models.CheckConstraint(check=models.Q(('fecha_inicio__lte', models.F('fecha_fin'))), name='backend_semestre_fecha_fin_posterior_a_fecha_inicio', violation_error_message='Fecha fin mayor o igual a fecha inicio.'),
        ),
        migrations.AddField(
            model_name='rol',
            name='asignatura',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.asignatura'),
        ),
        migrations.AddField(
            model_name='rol',
            name='carrera',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.carrera'),
        ),
        migrations.AddField(
            model_name='rol',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='programatienedescriptor',
            name='descriptor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.descriptor'),
        ),
        migrations.AddField(
            model_name='programatienedescriptor',
            name='version_plan_asignatura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versionprogramaasignatura'),
        ),
        migrations.AddField(
            model_name='programatieneactividadreservada',
            name='actividad_reservada',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.actividadreservada'),
        ),
        migrations.AddField(
            model_name='programatieneactividadreservada',
            name='version_plan_asignatura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versionprogramaasignatura'),
        ),
        migrations.AddField(
            model_name='plandeestudio',
            name='asignaturas',
            field=models.ManyToManyField(to='backend.asignatura'),
        ),
        migrations.AddField(
            model_name='plandeestudio',
            name='carrera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.carrera'),
        ),
        migrations.AddField(
            model_name='notificacion',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='estandar',
            name='carrera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.carrera'),
        ),
        migrations.AddField(
            model_name='estandar',
            name='descriptores',
            field=models.ManyToManyField(to='backend.descriptor'),
        ),
        migrations.AddField(
            model_name='correlativa',
            name='asignatura_correlativa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.asignatura'),
        ),
        migrations.AddField(
            model_name='correlativa',
            name='version_programa_asignatura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.versionprogramaasignatura'),
        ),
        migrations.AddField(
            model_name='cargabloque',
            name='bloque_curricular',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.bloquecurricular'),
        ),
        migrations.AddField(
            model_name='cargabloque',
            name='version_programa_asignatura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.versionprogramaasignatura'),
        ),
        migrations.AddField(
            model_name='auditoriaestadoversionprograma',
            name='rol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.rol'),
        ),
        migrations.AddField(
            model_name='auditoriaestadoversionprograma',
            name='version_programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.versionprogramaasignatura'),
        ),
        migrations.AddField(
            model_name='asignatura',
            name='bloque_curricular',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.bloquecurricular'),
        ),
        migrations.AddField(
            model_name='actividadreservada',
            name='estandar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.estandar'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='plandeestudio',
            constraint=models.CheckConstraint(check=models.Q(('fecha_inicio__lte', models.F('fecha_fin'))), name='backend_plan_de_estudio_fecha_fin_posterior_a_fecha_inicio', violation_error_message='Fecha fin mayor o igual a fecha inicio.'),
        ),
    ]
